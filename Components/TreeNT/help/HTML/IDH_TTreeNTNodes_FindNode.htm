<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Time2HELP 1.0; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>FindNode Method</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2">
<TABLE BGCOLOR="#FFFF00" BORDER="0" WIDTH="100%">
<TR>
<TD><Font Color="#000000F"><B>FindNode method</B></Font></TD></TR></Table><P><B>Applies to</B><Br><A HREF="IDH_Class_TTreeNTNodes.htm">TTreeNTNodes</A><P><B>Declaration</B><Br><Font Face="Courier New"><B>Function</B> FindNode(Flags: <A HREF="IDH_Type_TFindFlags.htm">TFindFlags</A>; AText: <B>String</B>; AData: Pointer): <A HREF="IDH_Class_TTreeNTNode.htm">TTreeNTNode</A>;</Font><Font Color=#FF0000>
<H3>Implementation</H3></Font><table border="0" bgcolor="#FFFED9"> <tr> <td><pre><B>function</B> TTreeNTNodes.FindNode(Flags: <A HREF="IDH_Type_TFindFlags.htm">TFindFlags</A>; AText: <B>String</B>; AData: Pointer): <A HREF="IDH_Class_TTreeNTNode.htm">TTreeNTNode</A>;

<Font Color="#0000DD">// searchs for the first node matching one or both AText and AData (depending on the passed flags)</Font>

<B>begin</B>
  Result := GetFirstNode;
  <B>if</B> Flags = [ffText] <B>then</B>
  <B>begin</B>                     
    <B>while</B> assigned(Result) <B>do</B>
    <B>begin</B>
      <B>if</B> CompareText(Result.FText, AText) = 0 <B>then</B> Break;
      Result := Result.GetNext;
    <B>end</B>;
  <B>end</B>
  <B>else</B>
    <B>if</B> Flags = [ffData] <B>then</B>
    <B>begin</B>
      <B>while</B> assigned(Result) <B>do</B>
      <B>begin</B>
        <B>if</B> Result.Data = AData <B>then</B> Break;
        Result := Result.GetNext;
      <B>end</B>;
    <B>end</B>
    <B>else</B>
      <B>if</B> Flags = [ffText, ffData] <B>then</B>
      <B>begin</B>
        <B>while</B> assigned(Result) <B>do</B>
        <B>begin</B>
          <B>if</B> (CompareText(Result.FText, AText) = 0) <B>and</B>
             (Result.Data = AData)                 <B>then</B> Break;
          Result := Result.GetNext;
        <B>end</B>;
      <B>end</B>
      <B>else</B> Result := <B>nil</B>;
<B>End</B>;</pre></td></tr></Table>